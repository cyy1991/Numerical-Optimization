function [res] = integral_impl (f, start_, end_)
%% Different implementations of integral

    % res = default_integral(f, start_, end_);
    % res = space_sample_integral(f, start_, end_, 1000);
    % res = romberg_integral(f, start_, end_, 20);
    res = guassian_quadrature(f, start_, end_, 64);
    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %% Implementations start here
    function [res] = default_integral (f, start_, end_)
        
        % Unknown bug when integrate f
        res = integral(f, start_, end_);
    end

    function [res] = space_sample_integral (f, start_, end_, n)
    % n is the number of evaluations
        
        xx = linspace(start_, end_, n);
        yy = arrayfun(f, xx);
        res = sum(yy) / n;
    end

    function [res] = romberg_integral (f, start_, end_, n)
    % n is the size of Romberg table

        % initialization
        h = end_ - start_;
        R = zeros(2, n);
        R(1, 1) = h/2 * (f(start_) + f(end_));

        for i = 2:n
            
            sum = 0;
            for k = 1:2^(i-2)
                sum = sum + f(start_ + (k-0.5)*h);
            end
            R(2, 1) = 1/2 * (R(1, 1) + h*sum);

            for j = 2:i
                R(2, j) = R(2, j-1) + (R(2, j-1)-R(1, j-1)) / (4^(j-1)-1);
            end

            h = h/2;
            R(1, :) = R(2, :);
        end

        res = R(2, n);
    end

    function [res] = guassian_quadrature(f, ~, ~, n)
        % n is the number of nodes
        w = [0.0486909570091397,0.0486909570091397,0.0485754674415034,0.0485754674415034,0.0483447622348030,0.0483447622348030,0.0479993885964583,0.0479993885964583,0.0475401657148303,0.0475401657148303,0.0469681828162100,0.0469681828162100,0.0462847965813144,0.0462847965813144,0.0454916279274181,0.0454916279274181,0.0445905581637566,0.0445905581637566,0.0435837245293235,0.0435837245293235,0.0424735151236536,0.0424735151236536,0.0412625632426235,0.0412625632426235,0.0399537411327203,0.0399537411327203,0.0385501531786156,0.0385501531786156,0.0370551285402400,0.0370551285402400,0.0354722132568824,0.0354722132568824,0.0338051618371416,0.0338051618371416,0.0320579283548516,0.0320579283548516,0.0302346570724025,0.0302346570724025,0.0283396726142595,0.0283396726142595,0.0263774697150547,0.0263774697150547,0.0243527025687109,0.0243527025687109,0.0222701738083833,0.0222701738083833,0.0201348231535302,0.0201348231535302,0.0179517157756973,0.0179517157756973,0.0157260304760247,0.0157260304760247,0.0134630478967186,0.0134630478967186,0.0111681394601311,0.0111681394601311,0.00884675982636390,0.00884675982636390,0.00650445796897840,0.00650445796897840,0.00414703326056250,0.00414703326056250,0.00178328072169640,0.00178328072169640];
        x = 0.5.*[-0.0243502926634244,0.0243502926634244,-0.0729931217877990,0.0729931217877990,-0.121462819296120,0.121462819296120,-0.169644420423992,0.169644420423992,-0.217423643740007,0.217423643740007,-0.264687162208767,0.264687162208767,-0.311322871990211,0.311322871990211,-0.357220158337668,0.357220158337668,-0.402270157963991,0.402270157963991,-0.446366017253464,0.446366017253464,-0.489403145707053,0.489403145707053,-0.531279464019894,0.531279464019894,-0.571895646202634,0.571895646202634,-0.611155355172393,0.611155355172393,-0.648965471254657,0.648965471254657,-0.685236313054233,0.685236313054233,-0.719881850171610,0.719881850171610,-0.752819907260531,0.752819907260531,-0.783972358943341,0.783972358943341,-0.813265315122797,0.813265315122797,-0.840629296252580,0.840629296252580,-0.865999398154092,0.865999398154092,-0.889315445995114,0.889315445995114,-0.910522137078502,0.910522137078502,-0.929569172131939,0.929569172131939,-0.946411374858402,0.946411374858402,-0.961008799652053,0.961008799652053,-0.973326827789911,0.973326827789911,-0.983336253884626,0.983336253884626,-0.991013371476744,0.991013371476744,-0.996340116771955,0.996340116771955,-0.999305041735772,0.999305041735772]+0.5;
        
        ff = [];
        for i=1:n
            ff = [ff, f(x(i))];
        end
        res = 0.5.* ff * w';
    end 

end
